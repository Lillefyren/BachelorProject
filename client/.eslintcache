[{"C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\reportWebVitals.js":"1","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\index.js":"2","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\App.js":"3","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\card.js":"4","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\Navigation.js":"5","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\View\\Registration.js":"6","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\View\\Homepage.js":"7"},{"size":362,"mtime":1606387729405,"results":"8","hashOfConfig":"9"},{"size":216,"mtime":1606403522630,"results":"10","hashOfConfig":"9"},{"size":441,"mtime":1606945516067,"results":"11","hashOfConfig":"9"},{"size":904,"mtime":1606689390724,"results":"12","hashOfConfig":"9"},{"size":753,"mtime":1606690847853,"results":"13","hashOfConfig":"9"},{"size":2477,"mtime":1606922481178,"results":"14","hashOfConfig":"9"},{"size":479,"mtime":1606944224148,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iroobs",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\index.js",[],"C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\App.js",[],"C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\card.js",["33"],"C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\Navigation.js",["34","35","36","37","38"],"import React from \"react\";\r\nimport \"./App.scss\";\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"primary-menu\">\r\n        <li className=\"primary-menu__team-overview\">\r\n          <a href=\"\">Holdoversigt</a>\r\n        </li>\r\n        <li className=\"primary-menu__your-menu\">\r\n          <a href=\"\">Dine hold</a>\r\n        </li>\r\n        <li className=\"primary-menu__cancellation-list\">\r\n          <a href=\"\">Afbudsliste</a>\r\n        </li>\r\n        <li className=\"primary-menu__profile-information\">\r\n          <a href=\"\">Profiloplysninger</a>\r\n        </li>\r\n        <li className=\"primary-menu__logout\">\r\n          <a href=\"\">Logud</a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\View\\Registration.js",["39","40"],"import react, { useEffect, useState } from \"react\";\r\nimport \"../App.scss\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Registration() {\r\n  //usestate for registration\r\n  const [usernameReg, setUsernameReg] = useState(\"\");\r\n  const [passwordReg, setPasswordReg] = useState(\"\");\r\n\r\n  //usestate for login\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  //usestate for loginstatus\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  //sending register request to backend - register method\r\n  const register = () => {\r\n    Axios.post(\"http://localhost:3001/register\", {\r\n      username: usernameReg,\r\n      password: passwordReg,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  //login method\r\n  const login = () => {\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      username: username,\r\n      password: password,\r\n    }).then((response) => {\r\n      if (response.data.message) {\r\n        setLoginStatus(response.data.message);\r\n      } else {\r\n        setLoginStatus(response.data[0].username);\r\n      }\r\n      console.log(response.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n      if (response.data.loggedIn == true) {\r\n        setLoginStatus(response.data.user[0].username);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"registration\">\r\n        <h1>Registration</h1>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setUsernameReg(e.target.value);\r\n          }}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setPasswordReg(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={register}>Register</button>\r\n      </div>\r\n\r\n      <div className=\"login\">\r\n        <h1>Login</h1>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email..\"\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Pasword..\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={login}>Login</button>\r\n      </div>\r\n\r\n      <h1>{loginStatus}</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","C:\\Users\\Simon\\Documents\\GitHub\\BachelorProject\\client\\src\\View\\Homepage.js",["41","42","43"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Homepage() {\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n      if (response.data.loggedIn == true) {\r\n        //setRole(response.data.user[0].role);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome user</h1>\r\n      <h1>Welcome admin</h1>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"44","severity":1,"message":"45","line":9,"column":11,"nodeType":"46","endLine":9,"endColumn":49},{"ruleId":"47","severity":1,"message":"48","line":9,"column":11,"nodeType":"46","endLine":9,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":12,"column":11,"nodeType":"46","endLine":12,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":15,"column":11,"nodeType":"46","endLine":15,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":18,"column":11,"nodeType":"46","endLine":18,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":21,"column":11,"nodeType":"46","endLine":21,"endColumn":22},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":44,"column":34,"nodeType":"55","messageId":"56","endLine":44,"endColumn":36},{"ruleId":"49","severity":1,"message":"57","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":14},{"ruleId":"49","severity":1,"message":"58","line":5,"column":16,"nodeType":"51","messageId":"52","endLine":5,"endColumn":23},{"ruleId":"53","severity":1,"message":"54","line":9,"column":34,"nodeType":"55","messageId":"56","endLine":9,"endColumn":36},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'role' is assigned a value but never used.","'setRole' is assigned a value but never used."]